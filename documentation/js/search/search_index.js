var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.203,1,1.731]],["body/controllers/AppController.html",[0,1.785,1,2.569,2,1.371,3,0.442,4,0.372,5,0.372,6,2.666,7,0.594,8,1.785,9,1.985,10,4.256,11,3.268,12,2.269,13,0.044,14,3.268,15,1.371,16,3.268,17,1.371,18,0.769,19,0.678,20,1.223,21,4.256,22,1.371,23,0.773,24,2.269,25,3.268,26,3.268,27,0.678,28,3.268,29,1.973,30,0.442,31,0.769,32,3.268,33,3.268,34,3.268,35,1.371,36,3.268,37,0.025,38,0.032,39,0.025]],["title/modules/AppModule.html",[40,0.761,41,1.731]],["body/modules/AppModule.html",[1,2.68,2,1.639,3,0.388,4,0.327,5,0.327,13,0.044,23,0.905,27,0.596,30,0.388,31,0.676,37,0.022,38,0.03,39,0.022,40,1.178,41,3.311,42,1.076,43,1.206,44,1.527,45,1.527,46,1.206,47,1.841,48,1.354,49,2.344,50,2.344,51,2.73,52,2.73,53,2.421,54,2.076,55,1.527,56,1.527,57,2.874,58,2.359,59,2.874,60,2.874,61,2.874,62,2.344]],["title/modules/AuthModule.html",[40,0.761,51,1.523]],["body/modules/AuthModule.html",[3,0.392,4,0.33,5,0.33,13,0.043,23,0.908,27,0.602,29,1.75,30,0.392,31,0.682,37,0.022,38,0.03,39,0.022,40,1.183,42,1.085,43,1.216,44,1.54,45,1.54,46,1.216,47,2.101,48,1.366,51,2.919,53,2.427,54,2.088,55,1.54,56,1.54,58,2.373,62,2.365,63,2.365,64,2.899,65,2.365,66,2.427,67,2.737,68,2.899,69,3.93,70,2.365,71,2.899]],["title/injectables/AuthService.html",[66,1.35,72,0.958]],["body/injectables/AuthService.html",[3,0.368,4,0.31,5,0.31,7,0.495,8,1.579,9,1.81,13,0.044,15,1.579,17,1.579,18,0.886,19,0.781,20,1.409,22,1.142,23,0.784,27,0.565,30,0.368,31,0.64,35,1.579,37,0.021,38,0.029,39,0.021,66,1.773,72,1.258,73,1.446,74,2.22,75,3.764,76,1.643,77,2.721,78,2.12,79,2.721,80,3.764,81,1.689,82,2.033,83,2.721,84,1.282,85,1.579,86,2.721,87,1.89,88,2.721,89,1.643,90,1.019,91,2,92,1.81,93,2.272,94,2.721,95,3.764,96,2.721,97,2.721,98,2.721]],["title/interfaces/CreateSubjectDto.html",[99,0.958,100,1.523]],["body/interfaces/CreateSubjectDto.html",[3,0.5,4,0.422,5,0.422,7,0.673,13,0.042,18,1.235,19,0.956,30,0.5,37,0.028,38,0.035,39,0.028,81,1.84,99,1.238,100,2.449,101,1.968,102,3.021,103,2.782,104,3.17]],["title/interfaces/CreateUserDto.html",[99,0.958,105,1.523]],["body/interfaces/CreateUserDto.html",[3,0.39,4,0.329,5,0.329,7,0.525,13,0.042,18,1.123,19,1.092,20,1.926,30,0.39,37,0.022,38,0.03,39,0.022,81,1.936,82,2.248,84,2.248,99,0.965,101,1.534,103,2.366,105,2.082,106,2.354,107,3.313,108,2.536,109,2.881,110,4.772]],["title/modules/DatabaseModule.html",[40,0.761,111,1.35]],["body/modules/DatabaseModule.html",[3,0.515,4,0.434,5,0.434,13,0.043,23,0.852,27,0.79,30,0.515,31,0.896,37,0.029,38,0.036,39,0.029,40,1.244,42,1.426,47,1.794,48,1.794,111,2.209,112,3.809,113,3.528,114,3.809]],["title/injectables/LocalStrategy.html",[67,1.523,72,0.958]],["body/injectables/LocalStrategy.html",[3,0.353,4,0.298,5,0.298,7,0.475,8,1.536,9,1.772,13,0.044,15,1.536,17,1.536,18,0.861,19,0.76,20,1.37,22,1.097,23,0.875,27,0.543,29,1.579,30,0.353,31,0.615,35,1.097,37,0.02,38,0.028,39,0.02,66,2.351,67,1.945,70,2.133,72,1.224,73,1.389,76,1.579,81,1.668,82,2.156,84,1.232,85,1.536,89,1.579,90,0.979,91,1.389,92,1.919,93,1.579,115,2.133,116,3.66,117,2.615,118,2.615,119,3.66,120,2.615,121,3.66,122,2.615,123,2.615,124,2.133,125,2.133,126,2.615,127,1.816,128,2.615,129,2.615,130,2.615,131,2.133,132,1.232]],["title/interfaces/Subject.html",[99,0.958,133,1.523]],["body/interfaces/Subject.html",[3,0.448,4,0.378,5,0.378,7,0.603,13,0.042,18,1.186,19,0.989,23,0.603,30,0.448,37,0.025,38,0.033,39,0.025,81,1.865,90,1.784,99,1.109,101,1.762,103,2.594,104,3.044,108,2.679,127,2.984,133,2.283,134,2.705,135,3.888,136,1.762]],["title/controllers/SubjectController.html",[0,1.203,137,1.731]],["body/controllers/SubjectController.html",[0,1.18,2,1.18,3,0.38,4,0.32,5,0.32,7,0.511,8,1.615,9,1.842,12,2.674,13,0.044,15,1.615,17,1.18,18,0.662,19,0.584,20,1.053,22,1.615,23,0.858,24,3.049,27,0.584,30,0.38,31,0.662,35,1.18,37,0.021,38,0.029,39,0.021,85,1.615,89,1.699,90,1.053,100,2.713,133,2.046,137,2.325,138,2.295,139,2.295,140,2.325,141,2.85,142,2.295,143,2.813,144,2.813,145,2.813,146,2.295,147,2.295,148,2.295,149,2.068,150,2.295,151,2.813,152,2.813,153,2.295,154,2.813]],["title/modules/SubjectModule.html",[40,0.761,52,1.523]],["body/modules/SubjectModule.html",[2,1.615,3,0.38,4,0.32,5,0.32,13,0.043,23,0.899,27,0.584,30,0.38,31,0.662,37,0.021,38,0.029,39,0.021,40,1.165,42,1.053,43,1.18,44,1.495,45,1.495,46,1.18,47,2.068,48,2.068,52,2.869,54,2.046,55,1.495,56,1.495,58,2.325,111,2.405,137,2.651,149,2.619,150,2.295,155,2.295,156,2.295,157,2.295,158,2.295,159,2.813,160,2.295,161,2.813,162,2.674,163,2.813]],["title/injectables/SubjectService.html",[72,0.958,149,1.35]],["body/injectables/SubjectService.html",[3,0.348,4,0.293,5,0.293,7,0.468,8,1.519,9,2.083,13,0.044,15,1.757,17,1.519,18,0.852,19,0.751,20,1.356,22,1.519,23,0.87,27,0.534,30,0.348,31,0.606,35,1.519,37,0.02,38,0.027,39,0.02,72,1.21,73,1.368,76,2.186,85,1.906,90,0.964,91,1.368,93,2.186,100,2.544,132,1.213,133,1.368,136,1.368,140,2.186,141,2.744,142,2.954,147,2.1,148,2.1,149,1.706,164,2.1,165,2.575,166,3.707,167,2.575,168,3.621,169,2.575,170,2.575,171,1.788,172,1.788,173,1.788,174,2.575,175,2.1,176,2.575,177,2.575,178,2.575,179,2.575]],["title/interfaces/User.html",[92,1.203,99,0.958]],["body/interfaces/User.html",[3,0.39,4,0.329,5,0.329,7,0.525,13,0.042,18,1.123,19,1.068,23,0.525,30,0.39,37,0.022,38,0.03,39,0.022,81,1.92,82,2.248,84,2.248,90,1.926,92,1.644,99,0.965,101,1.534,103,2.366,107,3.313,108,2.536,109,2.881,127,2.721,135,3.629,136,1.534,180,2.354]],["title/controllers/UserController.html",[0,1.203,181,1.731]],["body/controllers/UserController.html",[0,0.811,2,0.811,3,0.261,4,0.22,5,0.22,7,0.351,8,1.232,9,2.065,12,2.465,13,0.044,15,1.489,17,1.232,18,0.691,19,0.609,20,1.099,22,1.489,23,0.873,24,2.465,27,0.401,30,0.261,31,0.455,35,1.489,37,0.015,38,0.022,39,0.015,78,1.489,81,1.186,82,1.383,85,1.883,87,1.342,89,1.167,90,0.724,91,2.265,92,1.232,93,1.773,105,2.553,108,1.56,109,1.167,131,1.577,132,1.383,139,1.577,140,1.773,141,2.393,146,1.577,153,1.577,173,1.342,181,1.773,182,1.577,183,2.395,184,1.577,185,1.933,186,1.577,187,2.936,188,1.933,189,2.395,190,1.933,191,1.933,192,1.933,193,1.933,194,1.933,195,2.395,196,2.039,197,1.577,198,1.577,199,1.342,200,1.933,201,1.577,202,1.933,203,1.933,204,1.933,205,1.933,206,1.933,207,1.933,208,1.933,209,2.936,210,1.933,211,1.933,212,1.933,213,1.933,214,1.933,215,1.933,216,1.933,217,1.933,218,1.933,219,2.936,220,1.933,221,1.933,222,1.933]],["title/modules/UserModule.html",[40,0.761,53,1.35]],["body/modules/UserModule.html",[2,1.615,3,0.38,4,0.32,5,0.32,13,0.043,23,0.899,27,0.584,30,0.38,31,0.662,37,0.021,38,0.029,39,0.021,40,1.165,42,1.053,43,1.18,44,1.495,45,1.495,46,1.18,47,2.068,48,2.068,53,2.544,54,2.046,55,1.495,56,1.495,58,2.325,78,2.332,111,2.405,160,2.295,181,2.651,201,2.295,223,2.295,224,2.813,225,2.295,226,2.295,227,2.813,228,2.813,229,2.674,230,2.813]],["title/injectables/UserService.html",[72,0.958,78,1.203]],["body/injectables/UserService.html",[3,0.292,4,0.246,5,0.246,7,0.392,8,1.338,9,2.221,13,0.044,15,1.874,17,1.757,18,0.985,19,0.869,20,1.568,22,1.757,23,0.812,27,0.448,30,0.292,31,0.508,35,1.757,37,0.016,38,0.024,39,0.016,72,1.066,73,1.147,76,1.925,78,1.338,81,1.563,84,1.017,85,2.083,90,0.808,91,1.147,92,0.905,105,2.374,132,1.017,136,1.147,140,1.925,141,2.528,166,3.416,171,1.499,173,1.499,175,1.761,183,2.601,184,2.601,186,2.601,189,1.761,197,1.761,198,1.761,231,1.761,232,3.188,233,2.158,234,2.158,235,3.188,236,2.158,237,2.158,238,2.158,239,3.188,240,2.158,241,1.499,242,2.158,243,2.158,244,2.158,245,2.158,246,2.158,247,2.158,248,2.158]],["title/coverage.html",[249,2.708]],["body/coverage.html",[0,1.609,1,1.329,5,0.251,6,1.795,13,0.043,19,0.457,37,0.017,38,0.025,39,0.017,46,0.923,66,1.037,67,1.17,72,1.413,74,1.795,78,0.923,92,0.923,99,1.413,100,1.17,102,1.795,105,1.17,106,1.795,113,1.528,115,1.795,132,1.037,133,1.17,134,1.795,137,1.329,138,1.795,149,1.037,162,1.528,164,1.795,172,1.528,180,1.795,181,1.329,182,1.795,196,1.528,199,1.528,229,1.528,231,1.795,241,1.528,249,1.528,250,2.201,251,2.201,252,2.201,253,5.696,254,2.201,255,4.228,256,3.129,257,5.368,258,5.415,259,2.639,260,2.246,261,2.201,262,3.835,263,2.639,264,1.795,265,1.795,266,2.201,267,2.201,268,2.639,269,2.639,270,1.795,271,2.201,272,2.201,273,2.201]],["title/dependencies.html",[43,1.445,274,2.4]],["body/dependencies.html",[13,0.044,27,0.632,29,1.838,37,0.023,38,0.031,39,0.023,43,1.277,87,2.114,124,3.728,125,2.483,136,1.618,195,2.483,275,3.044,276,3.044,277,4.571,278,3.044,279,3.044,280,3.044,281,4.061,282,3.044,283,4.061,284,3.044,285,3.044,286,3.044,287,3.044,288,3.044,289,3.044,290,3.044,291,3.044,292,3.044,293,3.044,294,3.044,295,3.044,296,3.044,297,3.044,298,3.044,299,3.044,300,3.044,301,3.044,302,3.044,303,3.044,304,3.044,305,3.044,306,3.044,307,3.044,308,3.044,309,3.044,310,3.044]],["title/miscellaneous/functions.html",[311,1.449,312,2.81]],["body/miscellaneous/functions.html",[7,0.776,13,0.038,37,0.032,38,0.038,39,0.032,46,2.239,260,2.966,311,2.579,312,3.485,313,3.485]],["title/index.html",[7,0.436,314,2.4,315,2.4]],["body/index.html",[4,0.313,13,0.043,37,0.021,38,0.029,39,0.021,104,1.657,249,1.905,316,2.744,317,2.744,318,3.785,319,2.744,320,2.744,321,2.744,322,2.744,323,2.744,324,2.744,325,2.744,326,2.744,327,2.744,328,4.333,329,2.744,330,2.744,331,2.744,332,2.744,333,5.192,334,2.744,335,2.744,336,2.744,337,5.067,338,2.744,339,2.744,340,3.785,341,2.744,342,2.744,343,2.744,344,2.744,345,3.785,346,3.785,347,2.744,348,2.744,349,2.744,350,3.785,351,3.785,352,2.744,353,2.744,354,2.744,355,2.744,356,2.744,357,2.238,358,2.744,359,2.744,360,2.744,361,2.744,362,2.744,363,2.744,364,2.744,365,2.744,366,2.744,367,2.744,368,2.744,369,2.744,370,2.744,371,2.744,372,2.744,373,2.744,374,2.744,375,2.744]],["title/modules.html",[42,1.46]],["body/modules.html",[13,0.036,37,0.029,38,0.036,39,0.029,41,2.326,42,1.442,51,2.047,52,2.047,53,1.815,111,1.815,357,4.343,376,5.323,377,5.323,378,5.462,379,3.852,380,3.852]],["title/overview.html",[381,3.182]],["body/overview.html",[2,1.123,13,0.042,37,0.02,38,0.028,39,0.02,40,0.711,41,3.176,42,1.002,43,1.123,44,1.423,45,1.423,46,1.123,47,1.262,48,1.262,49,2.184,50,2.184,51,2.838,52,2.795,53,2.516,54,1.978,55,1.423,56,1.423,63,2.184,65,2.184,66,2.015,67,2.273,73,1.423,78,2.164,101,1.423,111,2.178,149,2.43,155,2.184,156,2.184,157,2.184,158,2.184,223,2.184,225,2.184,226,2.184,381,2.184,382,2.678,383,2.678,384,3.722]],["title/miscellaneous/variables.html",[311,1.449,385,2.81]],["body/miscellaneous/variables.html",[7,0.495,13,0.045,18,0.786,19,1.087,37,0.013,38,0.021,39,0.013,81,1.69,82,1.284,84,1.284,85,0.736,104,1.06,107,1.893,108,1.449,109,1.06,113,1.893,132,1.284,162,1.893,171,1.893,172,2.617,196,1.893,199,1.893,229,1.893,241,2.617,256,1.432,259,1.432,260,1.219,263,1.432,264,1.432,265,2.726,268,1.432,269,1.432,270,2.726,311,1.06,313,1.432,385,1.432,386,3.342,387,2.726,388,2.726,389,1.755,390,2.726,391,2.726,392,5.124,393,5.124,394,1.755,395,3.342,396,3.342,397,3.342,398,1.755,399,3.768,400,3.768,401,1.755,402,2.726,403,4.889,404,4.889,405,1.755,406,1.755,407,1.755,408,1.755,409,2.726,410,1.755,411,1.755,412,1.755,413,1.755,414,1.755]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/CreateSubjectDto.html":{},"interfaces/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/LocalStrategy.html":{},"interfaces/Subject.html":{},"controllers/SubjectController.html":{},"modules/SubjectModule.html":{},"injectables/SubjectService.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":253,"title":{},"body":{"coverage.html":{}}}],["0.1.13",{"_index":302,"title":{},"body":{"dependencies.html":{}}}],["0.19.0",{"_index":287,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":296,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":258,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":254,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":255,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":262,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":271,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":267,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":266,"title":{},"body":{"coverage.html":{}}}],["1.0.0",{"_index":299,"title":{},"body":{"dependencies.html":{}}}],["1.6.0",{"_index":292,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":211,"title":{},"body":{"controllers/UserController.html":{}}}],["16.1.8",{"_index":276,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":414,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3",{"_index":383,"title":{},"body":{"overview.html":{}}}],["3.0.0",{"_index":304,"title":{},"body":{"dependencies.html":{}}}],["3.0.7",{"_index":288,"title":{},"body":{"dependencies.html":{}}}],["3.3.3",{"_index":310,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":384,"title":{},"body":{"overview.html":{}}}],["4.0.0",{"_index":298,"title":{},"body":{"dependencies.html":{}}}],["4.1.2",{"_index":283,"title":{},"body":{"dependencies.html":{}}}],["4.17.15",{"_index":294,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":382,"title":{},"body":{"overview.html":{}}}],["5.5.36",{"_index":285,"title":{},"body":{"dependencies.html":{}}}],["5.8.3",{"_index":295,"title":{},"body":{"dependencies.html":{}}}],["6.1.1",{"_index":279,"title":{},"body":{"dependencies.html":{}}}],["6.5.3",{"_index":306,"title":{},"body":{"dependencies.html":{}}}],["6.7.2",{"_index":277,"title":{},"body":{"dependencies.html":{}}}],["8.2.0",{"_index":289,"title":{},"body":{"dependencies.html":{}}}],["active",{"_index":394,"title":{},"body":{"miscellaneous/variables.html":{}}}],["active_status",{"_index":196,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["amazing",{"_index":358,"title":{},"body":{"index.html":{}}}],["angular",{"_index":327,"title":{},"body":{"index.html":{}}}],["app",{"_index":335,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":324,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":41,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["async",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"controllers/SubjectController.html":{},"injectables/SubjectService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["auth.service",{"_index":70,"title":{},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["auth/auth.module",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["authguard",{"_index":28,"title":{},"body":{"controllers/AppController.html":{}}}],["authmodule",{"_index":51,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":368,"title":{},"body":{"index.html":{}}}],["authservice",{"_index":66,"title":{"injectables/AuthService.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["available",{"_index":380,"title":{},"body":{"modules.html":{}}}],["await",{"_index":93,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"injectables/SubjectService.html":{},"controllers/UserController.html":{}}}],["axios",{"_index":286,"title":{},"body":{"dependencies.html":{}}}],["backers",{"_index":359,"title":{},"body":{"index.html":{}}}],["bcrypt",{"_index":87,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["birthdate",{"_index":107,"title":{},"body":{"interfaces/CreateUserDto.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["body",{"_index":146,"title":{},"body":{"controllers/SubjectController.html":{},"controllers/UserController.html":{}}}],["bootstrap",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/SubjectModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":378,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":376,"title":{},"body":{"modules.html":{}}}],["building",{"_index":319,"title":{},"body":{"index.html":{}}}],["catch",{"_index":214,"title":{},"body":{"controllers/UserController.html":{}}}],["class",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"injectables/LocalStrategy.html":{},"controllers/SubjectController.html":{},"modules/SubjectModule.html":{},"injectables/SubjectService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["cluster_appmodule",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":63,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":64,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":65,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_subjectmodule",{"_index":155,"title":{},"body":{"modules/SubjectModule.html":{},"overview.html":{}}}],["cluster_subjectmodule_exports",{"_index":157,"title":{},"body":{"modules/SubjectModule.html":{},"overview.html":{}}}],["cluster_subjectmodule_imports",{"_index":156,"title":{},"body":{"modules/SubjectModule.html":{},"overview.html":{}}}],["cluster_subjectmodule_providers",{"_index":158,"title":{},"body":{"modules/SubjectModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":223,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":225,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":224,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_providers",{"_index":226,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["compare",{"_index":86,"title":{},"body":{"injectables/AuthService.html":{}}}],["compare(password",{"_index":96,"title":{},"body":{"injectables/AuthService.html":{}}}],["connection",{"_index":400,"title":{},"body":{"miscellaneous/variables.html":{}}}],["connection.model('subject",{"_index":401,"title":{},"body":{"miscellaneous/variables.html":{}}}],["connection.model('user",{"_index":406,"title":{},"body":{"miscellaneous/variables.html":{}}}],["const",{"_index":91,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"injectables/SubjectService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["constants",{"_index":173,"title":{},"body":{"injectables/SubjectService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["constructor",{"_index":76,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"injectables/SubjectService.html":{},"injectables/UserService.html":{}}}],["constructor(authservice",{"_index":117,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(private",{"_index":89,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"controllers/SubjectController.html":{},"controllers/UserController.html":{}}}],["constructor(subjectmodel",{"_index":165,"title":{},"body":{"injectables/SubjectService.html":{}}}],["constructor(usermodel",{"_index":233,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(userservice",{"_index":77,"title":{},"body":{"injectables/AuthService.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/SubjectController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/SubjectController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('subject",{"_index":151,"title":{},"body":{"controllers/SubjectController.html":{}}}],["controller('user",{"_index":203,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/SubjectController.html":{},"modules/SubjectModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["coverage",{"_index":249,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":140,"title":{},"body":{"controllers/SubjectController.html":{},"injectables/SubjectService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["create(@body",{"_index":153,"title":{},"body":{"controllers/SubjectController.html":{},"controllers/UserController.html":{}}}],["create(createsubjectdto",{"_index":142,"title":{},"body":{"controllers/SubjectController.html":{},"injectables/SubjectService.html":{}}}],["create(createuserdto",{"_index":184,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["createdat",{"_index":108,"title":{},"body":{"interfaces/CreateUserDto.html":{},"interfaces/Subject.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["createdsubject",{"_index":177,"title":{},"body":{"injectables/SubjectService.html":{}}}],["createdsubject.save",{"_index":179,"title":{},"body":{"injectables/SubjectService.html":{}}}],["createduser",{"_index":246,"title":{},"body":{"injectables/UserService.html":{}}}],["createduser.save",{"_index":248,"title":{},"body":{"injectables/UserService.html":{}}}],["createsubject.dto",{"_index":147,"title":{},"body":{"controllers/SubjectController.html":{},"injectables/SubjectService.html":{}}}],["createsubjectdto",{"_index":100,"title":{"interfaces/CreateSubjectDto.html":{}},"body":{"interfaces/CreateSubjectDto.html":{},"controllers/SubjectController.html":{},"injectables/SubjectService.html":{},"coverage.html":{}}}],["createuser.dto",{"_index":197,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["createuserdto",{"_index":105,"title":{"interfaces/CreateUserDto.html":{}},"body":{"interfaces/CreateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["database.providers",{"_index":114,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["database/database.module",{"_index":160,"title":{},"body":{"modules/SubjectModule.html":{},"modules/UserModule.html":{}}}],["database_connection",{"_index":396,"title":{},"body":{"miscellaneous/variables.html":{}}}],["databasemodule",{"_index":111,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/DatabaseModule.html":{},"modules/SubjectModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["databaseproviders",{"_index":113,"title":{},"body":{"modules/DatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["date().valueof().tostring",{"_index":212,"title":{},"body":{"controllers/UserController.html":{}}}],["declarations",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/SubjectModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decorators",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"controllers/SubjectController.html":{},"controllers/UserController.html":{}}}],["default",{"_index":392,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"controllers/SubjectController.html":{},"injectables/SubjectService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dependencies",{"_index":43,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/SubjectModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":104,"title":{},"body":{"interfaces/CreateSubjectDto.html":{},"interfaces/Subject.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["development",{"_index":336,"title":{},"body":{"index.html":{}}}],["document",{"_index":135,"title":{},"body":{"interfaces/Subject.html":{},"interfaces/User.html":{}}}],["documentation",{"_index":250,"title":{},"body":{"coverage.html":{}}}],["dotenv",{"_index":195,"title":{},"body":{"controllers/UserController.html":{},"dependencies.html":{}}}],["dotenv.config",{"_index":202,"title":{},"body":{"controllers/UserController.html":{}}}],["e2e",{"_index":347,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":320,"title":{},"body":{"index.html":{}}}],["email",{"_index":84,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CreateUserDto.html":{},"injectables/LocalStrategy.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":215,"title":{},"body":{"controllers/UserController.html":{}}}],["error.message",{"_index":218,"title":{},"body":{"controllers/UserController.html":{}}}],["error.response.data",{"_index":217,"title":{},"body":{"controllers/UserController.html":{}}}],["error.response.status",{"_index":220,"title":{},"body":{"controllers/UserController.html":{}}}],["export",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/CreateSubjectDto.html":{},"interfaces/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/LocalStrategy.html":{},"interfaces/Subject.html":{},"controllers/SubjectController.html":{},"modules/SubjectModule.html":{},"injectables/SubjectService.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/SubjectModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":281,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":127,"title":{},"body":{"injectables/LocalStrategy.html":{},"interfaces/Subject.html":{},"interfaces/User.html":{}}}],["false",{"_index":405,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/CreateSubjectDto.html":{},"interfaces/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/LocalStrategy.html":{},"interfaces/Subject.html":{},"controllers/SubjectController.html":{},"modules/SubjectModule.html":{},"injectables/SubjectService.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["find",{"_index":183,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["find(@param('id",{"_index":205,"title":{},"body":{"controllers/UserController.html":{}}}],["find(id",{"_index":186,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findall",{"_index":141,"title":{},"body":{"controllers/SubjectController.html":{},"injectables/SubjectService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findbyemail",{"_index":232,"title":{},"body":{"injectables/UserService.html":{}}}],["findbyemail(email",{"_index":239,"title":{},"body":{"injectables/UserService.html":{}}}],["framework",{"_index":318,"title":{},"body":{"index.html":{}}}],["function",{"_index":261,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":312,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get(':id",{"_index":187,"title":{},"body":{"controllers/UserController.html":{}}}],["getting",{"_index":314,"title":{"index.html":{}},"body":{}}],["graph",{"_index":379,"title":{},"body":{"modules.html":{}}}],["grow",{"_index":354,"title":{},"body":{"index.html":{}}}],["hapi/joi",{"_index":275,"title":{},"body":{"dependencies.html":{}}}],["hash",{"_index":194,"title":{},"body":{"controllers/UserController.html":{}}}],["hash(password",{"_index":210,"title":{},"body":{"controllers/UserController.html":{}}}],["heavily",{"_index":325,"title":{},"body":{"index.html":{}}}],["here",{"_index":365,"title":{},"body":{"index.html":{}}}],["httpexception",{"_index":191,"title":{},"body":{"controllers/UserController.html":{}}}],["httpexception(message",{"_index":222,"title":{},"body":{"controllers/UserController.html":{}}}],["https://nestjs.com",{"_index":372,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":192,"title":{},"body":{"controllers/UserController.html":{}}}],["httpstatus.internal_server_error",{"_index":221,"title":{},"body":{"controllers/UserController.html":{}}}],["id",{"_index":189,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["identifier",{"_index":251,"title":{},"body":{"coverage.html":{}}}],["import",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"injectables/LocalStrategy.html":{},"interfaces/Subject.html":{},"controllers/SubjectController.html":{},"modules/SubjectModule.html":{},"injectables/SubjectService.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/SubjectModule.html":{},"modules/UserModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"interfaces/CreateSubjectDto.html":{},"interfaces/CreateUserDto.html":{},"injectables/LocalStrategy.html":{},"interfaces/Subject.html":{},"controllers/SubjectController.html":{},"injectables/SubjectService.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/CreateSubjectDto.html":{},"interfaces/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/LocalStrategy.html":{},"interfaces/Subject.html":{},"controllers/SubjectController.html":{},"modules/SubjectModule.html":{},"injectables/SubjectService.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["inject",{"_index":171,"title":{},"body":{"injectables/SubjectService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["inject(subject_model",{"_index":174,"title":{},"body":{"injectables/SubjectService.html":{}}}],["inject(user_model",{"_index":242,"title":{},"body":{"injectables/UserService.html":{}}}],["injectable",{"_index":72,"title":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"injectables/SubjectService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"injectables/SubjectService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":73,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"injectables/SubjectService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["inspired",{"_index":326,"title":{},"body":{"index.html":{}}}],["installation",{"_index":332,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":334,"title":{},"body":{"index.html":{}}}],["interface",{"_index":99,"title":{"interfaces/CreateSubjectDto.html":{},"interfaces/CreateUserDto.html":{},"interfaces/Subject.html":{},"interfaces/User.html":{}},"body":{"interfaces/CreateSubjectDto.html":{},"interfaces/CreateUserDto.html":{},"interfaces/Subject.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["interfaces",{"_index":101,"title":{},"body":{"interfaces/CreateSubjectDto.html":{},"interfaces/CreateUserDto.html":{},"interfaces/Subject.html":{},"interfaces/User.html":{},"overview.html":{}}}],["joi.object",{"_index":408,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string",{"_index":409,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().email",{"_index":412,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().required",{"_index":411,"title":{},"body":{"miscellaneous/variables.html":{}}}],["join",{"_index":361,"title":{},"body":{"index.html":{}}}],["jwks",{"_index":290,"title":{},"body":{"dependencies.html":{}}}],["jwt",{"_index":297,"title":{},"body":{"dependencies.html":{}}}],["kamil",{"_index":369,"title":{},"body":{"index.html":{}}}],["legend",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/SubjectModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["license",{"_index":375,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":351,"title":{},"body":{"index.html":{}}}],["local",{"_index":125,"title":{},"body":{"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["local.strategy",{"_index":71,"title":{},"body":{"modules/AuthModule.html":{}}}],["localstrategy",{"_index":67,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["lodash",{"_index":293,"title":{},"body":{"dependencies.html":{}}}],["login",{"_index":10,"title":{},"body":{"controllers/AppController.html":{}}}],["login(@request",{"_index":34,"title":{},"body":{"controllers/AppController.html":{}}}],["login(req",{"_index":11,"title":{},"body":{"controllers/AppController.html":{}}}],["matching",{"_index":38,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/CreateSubjectDto.html":{},"interfaces/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/LocalStrategy.html":{},"interfaces/Subject.html":{},"controllers/SubjectController.html":{},"modules/SubjectModule.html":{},"injectables/SubjectService.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":216,"title":{},"body":{"controllers/UserController.html":{}}}],["metadata",{"_index":301,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"controllers/SubjectController.html":{},"injectables/SubjectService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["min(3",{"_index":410,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mindomainsegments",{"_index":413,"title":{},"body":{"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":311,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":350,"title":{},"body":{"index.html":{}}}],["mode",{"_index":340,"title":{},"body":{"index.html":{}}}],["model",{"_index":166,"title":{},"body":{"injectables/SubjectService.html":{},"injectables/UserService.html":{}}}],["module",{"_index":40,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/SubjectModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/SubjectModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["modules",{"_index":42,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/SubjectModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["mongoose",{"_index":136,"title":{},"body":{"interfaces/Subject.html":{},"injectables/SubjectService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["mongoose.connect(database_host",{"_index":398,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongoose.schema",{"_index":402,"title":{},"body":{"miscellaneous/variables.html":{}}}],["more",{"_index":364,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":370,"title":{},"body":{"index.html":{}}}],["name",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"interfaces/CreateSubjectDto.html":{},"interfaces/CreateUserDto.html":{},"injectables/LocalStrategy.html":{},"interfaces/Subject.html":{},"controllers/SubjectController.html":{},"injectables/SubjectService.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["nest",{"_index":328,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":374,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"injectables/LocalStrategy.html":{},"controllers/SubjectController.html":{},"modules/SubjectModule.html":{},"injectables/SubjectService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":278,"title":{},"body":{"dependencies.html":{}}}],["nestjs/passport",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":280,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":282,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":132,"title":{},"body":{"injectables/LocalStrategy.html":{},"injectables/SubjectService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["node.js",{"_index":317,"title":{},"body":{"index.html":{}}}],["npm",{"_index":333,"title":{},"body":{"index.html":{}}}],["null",{"_index":98,"title":{},"body":{"injectables/AuthService.html":{}}}],["open",{"_index":352,"title":{},"body":{"index.html":{}}}],["optional",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"interfaces/CreateUserDto.html":{},"injectables/LocalStrategy.html":{},"controllers/SubjectController.html":{},"injectables/SubjectService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["out",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/SubjectModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["overview",{"_index":381,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":274,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":193,"title":{},"body":{"controllers/UserController.html":{}}}],["parameters",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"controllers/SubjectController.html":{},"injectables/SubjectService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["passhash",{"_index":209,"title":{},"body":{"controllers/UserController.html":{}}}],["passport",{"_index":124,"title":{},"body":{"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":69,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":122,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":128,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["password",{"_index":82,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CreateUserDto.html":{},"injectables/LocalStrategy.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["passwordcompare",{"_index":95,"title":{},"body":{"injectables/AuthService.html":{}}}],["please",{"_index":362,"title":{},"body":{"index.html":{}}}],["post",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"controllers/SubjectController.html":{},"controllers/UserController.html":{}}}],["post('auth/login",{"_index":33,"title":{},"body":{"controllers/AppController.html":{}}}],["prefix",{"_index":139,"title":{},"body":{"controllers/SubjectController.html":{},"controllers/UserController.html":{}}}],["private",{"_index":175,"title":{},"body":{"injectables/SubjectService.html":{},"injectables/UserService.html":{}}}],["process.env",{"_index":399,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":342,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":316,"title":{},"body":{"index.html":{}}}],["project",{"_index":353,"title":{},"body":{"index.html":{}}}],["promise",{"_index":85,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"controllers/SubjectController.html":{},"injectables/SubjectService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["properties",{"_index":103,"title":{},"body":{"interfaces/CreateSubjectDto.html":{},"interfaces/CreateUserDto.html":{},"interfaces/Subject.html":{},"interfaces/User.html":{}}}],["provide",{"_index":395,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/SubjectModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["read",{"_index":363,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":90,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"interfaces/Subject.html":{},"controllers/SubjectController.html":{},"injectables/SubjectService.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["reflect",{"_index":300,"title":{},"body":{"dependencies.html":{}}}],["repository",{"_index":331,"title":{},"body":{"index.html":{}}}],["req",{"_index":21,"title":{},"body":{"controllers/AppController.html":{}}}],["req.user",{"_index":36,"title":{},"body":{"controllers/AppController.html":{}}}],["request",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["required",{"_index":403,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/SubjectModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["result",{"_index":37,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/CreateSubjectDto.html":{},"interfaces/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/LocalStrategy.html":{},"interfaces/Subject.html":{},"controllers/SubjectController.html":{},"modules/SubjectModule.html":{},"injectables/SubjectService.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":39,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/CreateSubjectDto.html":{},"interfaces/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/LocalStrategy.html":{},"interfaces/Subject.html":{},"controllers/SubjectController.html":{},"modules/SubjectModule.html":{},"injectables/SubjectService.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":35,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"controllers/SubjectController.html":{},"injectables/SubjectService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"controllers/SubjectController.html":{},"injectables/SubjectService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["rimraf",{"_index":303,"title":{},"body":{"dependencies.html":{}}}],["rsa",{"_index":291,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":337,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":305,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":321,"title":{},"body":{"index.html":{}}}],["server",{"_index":322,"title":{},"body":{"index.html":{}}}],["side",{"_index":323,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/CreateSubjectDto.html":{},"interfaces/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/LocalStrategy.html":{},"interfaces/Subject.html":{},"controllers/SubjectController.html":{},"modules/SubjectModule.html":{},"injectables/SubjectService.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"index.html":{}}}],["sponsors",{"_index":356,"title":{},"body":{"index.html":{}}}],["src/.../constants.ts",{"_index":386,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../database.providers.ts",{"_index":387,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":313,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../subject.provider.ts",{"_index":388,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../subject.schema.ts",{"_index":389,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.provider.ts",{"_index":390,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.schema.ts",{"_index":391,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:8",{"_index":16,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["src/auth/auth.module.ts",{"_index":68,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":74,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:6",{"_index":79,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:9",{"_index":83,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/local.strategy.ts",{"_index":115,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/auth/local.strategy.ts:13",{"_index":120,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/local.strategy.ts:8",{"_index":118,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/constants.ts",{"_index":256,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/database/database.module.ts",{"_index":112,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["src/database/database.providers.ts",{"_index":259,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":260,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/subject/createsubject.dto.ts",{"_index":102,"title":{},"body":{"interfaces/CreateSubjectDto.html":{},"coverage.html":{}}}],["src/subject/subject.controller.ts",{"_index":138,"title":{},"body":{"controllers/SubjectController.html":{},"coverage.html":{}}}],["src/subject/subject.controller.ts:11",{"_index":145,"title":{},"body":{"controllers/SubjectController.html":{}}}],["src/subject/subject.controller.ts:16",{"_index":143,"title":{},"body":{"controllers/SubjectController.html":{}}}],["src/subject/subject.interface.ts",{"_index":134,"title":{},"body":{"interfaces/Subject.html":{},"coverage.html":{}}}],["src/subject/subject.module.ts",{"_index":159,"title":{},"body":{"modules/SubjectModule.html":{}}}],["src/subject/subject.provider.ts",{"_index":263,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/subject/subject.schema.ts",{"_index":264,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/subject/subject.service.ts",{"_index":164,"title":{},"body":{"injectables/SubjectService.html":{},"coverage.html":{}}}],["src/subject/subject.service.ts:14",{"_index":170,"title":{},"body":{"injectables/SubjectService.html":{}}}],["src/subject/subject.service.ts:18",{"_index":169,"title":{},"body":{"injectables/SubjectService.html":{}}}],["src/subject/subject.service.ts:8",{"_index":167,"title":{},"body":{"injectables/SubjectService.html":{}}}],["src/user/createuser.dto.ts",{"_index":106,"title":{},"body":{"interfaces/CreateUserDto.html":{},"coverage.html":{}}}],["src/user/user.controller.ts",{"_index":182,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/user.controller.ts:25",{"_index":190,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:30",{"_index":188,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:35",{"_index":185,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.interface",{"_index":126,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/user/user.interface.ts",{"_index":180,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/user/user.module.ts",{"_index":227,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.provider.ts",{"_index":268,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/user/user.schema.ts",{"_index":269,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/user/user.service.ts",{"_index":231,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/user.service.ts:14",{"_index":238,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:18",{"_index":237,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:22",{"_index":240,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:26",{"_index":236,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:8",{"_index":234,"title":{},"body":{"injectables/UserService.html":{}}}],["start",{"_index":338,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":341,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":343,"title":{},"body":{"index.html":{}}}],["started",{"_index":315,"title":{"index.html":{}},"body":{}}],["starter",{"_index":330,"title":{},"body":{"index.html":{}}}],["statements",{"_index":252,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":109,"title":{},"body":{"interfaces/CreateUserDto.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["statuscode",{"_index":219,"title":{},"body":{"controllers/UserController.html":{}}}],["stay",{"_index":366,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":123,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["string",{"_index":81,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CreateSubjectDto.html":{},"interfaces/CreateUserDto.html":{},"injectables/LocalStrategy.html":{},"interfaces/Subject.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["subject",{"_index":133,"title":{"interfaces/Subject.html":{}},"body":{"interfaces/Subject.html":{},"controllers/SubjectController.html":{},"injectables/SubjectService.html":{},"coverage.html":{}}}],["subject.controller",{"_index":161,"title":{},"body":{"modules/SubjectModule.html":{}}}],["subject.interface",{"_index":148,"title":{},"body":{"controllers/SubjectController.html":{},"injectables/SubjectService.html":{}}}],["subject.provider",{"_index":163,"title":{},"body":{"modules/SubjectModule.html":{}}}],["subject.service",{"_index":150,"title":{},"body":{"controllers/SubjectController.html":{},"modules/SubjectModule.html":{}}}],["subject/subject.module",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["subject_model",{"_index":172,"title":{},"body":{"injectables/SubjectService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["subjectcontroller",{"_index":137,"title":{"controllers/SubjectController.html":{}},"body":{"controllers/SubjectController.html":{},"modules/SubjectModule.html":{},"coverage.html":{}}}],["subjectmodel",{"_index":168,"title":{},"body":{"injectables/SubjectService.html":{}}}],["subjectmodule",{"_index":52,"title":{"modules/SubjectModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SubjectModule.html":{},"modules.html":{},"overview.html":{}}}],["subjectprovider",{"_index":162,"title":{},"body":{"modules/SubjectModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["subjectschema",{"_index":265,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["subjectservice",{"_index":149,"title":{"injectables/SubjectService.html":{}},"body":{"controllers/SubjectController.html":{},"modules/SubjectModule.html":{},"injectables/SubjectService.html":{},"coverage.html":{},"overview.html":{}}}],["super",{"_index":129,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["support",{"_index":357,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":377,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":307,"title":{},"body":{"dependencies.html":{}}}],["table",{"_index":273,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":272,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":346,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":349,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":348,"title":{},"body":{"index.html":{}}}],["tests",{"_index":345,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":355,"title":{},"body":{"index.html":{}}}],["this.authservice.validateuser(email",{"_index":130,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.subjectmodel(createsubjectdto",{"_index":178,"title":{},"body":{"injectables/SubjectService.html":{}}}],["this.subjectmodel.find().exec",{"_index":176,"title":{},"body":{"injectables/SubjectService.html":{}}}],["this.subjectservice.create(createsubjectdto",{"_index":154,"title":{},"body":{"controllers/SubjectController.html":{}}}],["this.subjectservice.findall",{"_index":152,"title":{},"body":{"controllers/SubjectController.html":{}}}],["this.usermodel(createuserdto",{"_index":247,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usermodel.find().exec",{"_index":243,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usermodel.findbyid(id",{"_index":244,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usermodel.findone(email",{"_index":245,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.create",{"_index":213,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.find(id",{"_index":206,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findall",{"_index":204,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findbyemail(email",{"_index":94,"title":{},"body":{"injectables/AuthService.html":{}}}],["throw",{"_index":131,"title":{},"body":{"injectables/LocalStrategy.html":{},"controllers/UserController.html":{}}}],["touch",{"_index":367,"title":{},"body":{"index.html":{}}}],["true",{"_index":404,"title":{},"body":{"miscellaneous/variables.html":{}}}],["try",{"_index":207,"title":{},"body":{"controllers/UserController.html":{}}}],["twitter",{"_index":373,"title":{},"body":{"index.html":{}}}],["type",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"interfaces/CreateSubjectDto.html":{},"interfaces/CreateUserDto.html":{},"injectables/LocalStrategy.html":{},"interfaces/Subject.html":{},"controllers/SubjectController.html":{},"injectables/SubjectService.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types/mongoose",{"_index":284,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":329,"title":{},"body":{"index.html":{}}}],["ui",{"_index":308,"title":{},"body":{"dependencies.html":{}}}],["unauthorizedexception",{"_index":121,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["unique",{"_index":407,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unit",{"_index":344,"title":{},"body":{"index.html":{}}}],["usefactory",{"_index":397,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useguards",{"_index":26,"title":{},"body":{"controllers/AppController.html":{}}}],["useguards(authguard('local",{"_index":32,"title":{},"body":{"controllers/AppController.html":{}}}],["useguards(undefined)@post('auth/login",{"_index":14,"title":{},"body":{"controllers/AppController.html":{}}}],["user",{"_index":92,"title":{"interfaces/User.html":{}},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["user.controller",{"_index":228,"title":{},"body":{"modules/UserModule.html":{}}}],["user.interface",{"_index":198,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.password",{"_index":97,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.provider",{"_index":230,"title":{},"body":{"modules/UserModule.html":{}}}],["user.schema",{"_index":200,"title":{},"body":{"controllers/UserController.html":{}}}],["user.service",{"_index":201,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user/user.module",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["user/user.service",{"_index":88,"title":{},"body":{"injectables/AuthService.html":{}}}],["user_id",{"_index":110,"title":{},"body":{"interfaces/CreateUserDto.html":{}}}],["user_model",{"_index":241,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usercontroller",{"_index":181,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["usermodel",{"_index":235,"title":{},"body":{"injectables/UserService.html":{}}}],["usermodule",{"_index":53,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["userprovider",{"_index":229,"title":{},"body":{"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userschema",{"_index":270,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["userservice",{"_index":78,"title":{"injectables/UserService.html":{}},"body":{"injectables/AuthService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["uservalidationschema",{"_index":199,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["uservalidationschema.validateasync(createuserdto",{"_index":208,"title":{},"body":{"controllers/UserController.html":{}}}],["uuid",{"_index":309,"title":{},"body":{"dependencies.html":{}}}],["validate",{"_index":116,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validate(email",{"_index":119,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validateuser",{"_index":75,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(email",{"_index":80,"title":{},"body":{"injectables/AuthService.html":{}}}],["value",{"_index":393,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":257,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":385,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["void",{"_index":144,"title":{},"body":{"controllers/SubjectController.html":{}}}],["watch",{"_index":339,"title":{},"body":{"index.html":{}}}],["website",{"_index":371,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":360,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/SubjectModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(req: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@Post('auth/login')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, Request, UseGuards } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Controller()\nexport class AppController {\n  @UseGuards(AuthGuard('local'))\n  @Post('auth/login')\n  async login(@Request() req: any) {\n    return req.user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nSubjectModule\n\nSubjectModule\n\nAppModule -->\n\nSubjectModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            SubjectModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AuthModule } from './auth/auth.module';\nimport { SubjectModule } from './subject/subject.module';\nimport { UserModule } from './user/user.module';\n\n@Module({\n  imports: [AuthModule, SubjectModule, UserModule],\n  controllers: [AppController],\n  providers: [],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PassportModule } from '@nestjs/passport';\nimport { UserModule } from '../user/user.module';\nimport { AuthService } from './auth.service';\nimport { LocalStrategy } from './local.strategy';\n\n@Module({\n  imports: [UserModule, PassportModule],\n  providers: [AuthService, LocalStrategy],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { compare } from 'bcrypt';\nimport { UserService } from '../user/user.service';\n\n@Injectable()\nexport class AuthService {\n  constructor(private readonly userService: UserService) {}\n\n  async validateUser(email: string, password: string): Promise {\n    const user = await this.userService.findByEmail(email);\n    const passwordCompare = await compare(password, user.password);\n\n    if (user && passwordCompare) {\n      return user;\n    }\n    return null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateSubjectDto.html":{"url":"interfaces/CreateSubjectDto.html","title":"interface - CreateSubjectDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CreateSubjectDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subject/createSubject.dto.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        description\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface CreateSubjectDto {\n  name: string;\n  description: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateUserDto.html":{"url":"interfaces/CreateUserDto.html","title":"interface - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/createUser.dto.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        birthdate\n                                \n                                \n                                            Optional\n                                        createdAt\n                                \n                                \n                                        email\n                                \n                                \n                                        name\n                                \n                                \n                                        password\n                                \n                                \n                                            Optional\n                                        status\n                                \n                                \n                                            Optional\n                                        user_id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        birthdate\n                                    \n                                \n                                \n                                    \n                                        birthdate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                    \n                                \n                                \n                                    \n                                        createdAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user_id\n                                    \n                                \n                                \n                                    \n                                        user_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface CreateUserDto {\n    name: string;\n    email: string;\n    password: string;\n    birthdate: string;\n    status?: string;\n    createdAt?: string;\n    user_id?: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/database/database.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { databaseProviders } from './database.providers';\n\n@Module({\n    providers: [...databaseProviders],\n    exports: [...databaseProviders],\n})\nexport class DatabaseModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/local.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/local.strategy.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/local.strategy.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Strategy } from 'passport-local';\nimport { User } from 'src/user/user.interface';\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private readonly authService: AuthService) {\n    super();\n  }\n\n  async validate(email: string, password: string): Promise {\n    const user = await this.authService.validateUser(email, password);\n    if (!user) {\n      throw new UnauthorizedException();\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Subject.html":{"url":"interfaces/Subject.html","title":"interface - Subject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Subject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subject/subject.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        createdAt\n                                \n                                \n                                        description\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                    \n                                \n                                \n                                    \n                                        createdAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Document } from 'mongoose';\n\nexport interface Subject extends Document {\n  readonly name: string;\n  readonly description: string;\n  readonly createdAt: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SubjectController.html":{"url":"controllers/SubjectController.html","title":"controller - SubjectController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SubjectController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subject/subject.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                subject\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(createSubjectDto: CreateSubjectDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/subject/subject.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createSubjectDto\n                                    \n                                                CreateSubjectDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/subject/subject.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Post } from '@nestjs/common';\nimport { CreateSubjectDto } from './createSubject.dto';\nimport { Subject } from './subject.interface';\nimport { SubjectService } from './subject.service';\n\n@Controller('subject')\nexport class SubjectController {\n  constructor(private readonly subjectService: SubjectService) {}\n\n  @Get()\n  async findAll(): Promise {\n    return this.subjectService.findAll();\n  }\n\n  @Post()\n  create(@Body() createSubjectDto: CreateSubjectDto) {\n    this.subjectService.create(createSubjectDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SubjectModule.html":{"url":"modules/SubjectModule.html","title":"module - SubjectModule","body":"\n                   \n\n\n\n\n    Modules\n    SubjectModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SubjectModule\n\n\n\ncluster_SubjectModule_imports\n\n\n\ncluster_SubjectModule_exports\n\n\n\ncluster_SubjectModule_providers\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nSubjectModule\n\nSubjectModule\n\nSubjectModule -->\n\nDatabaseModule->SubjectModule\n\n\n\n\n\nSubjectService \n\nSubjectService \n\nSubjectService  -->\n\nSubjectModule->SubjectService \n\n\n\n\n\nSubjectService\n\nSubjectService\n\nSubjectModule -->\n\nSubjectService->SubjectModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/subject/subject.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SubjectService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SubjectController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SubjectService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { DatabaseModule } from '../database/database.module';\nimport { SubjectController } from './subject.controller';\nimport { subjectProvider } from './subject.provider';\nimport { SubjectService } from './subject.service';\n\n@Module({\n  imports: [DatabaseModule],\n  controllers: [SubjectController],\n  providers: [SubjectService, ...subjectProvider],\n  exports: [SubjectService],\n})\nexport class SubjectModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SubjectService.html":{"url":"injectables/SubjectService.html","title":"injectable - SubjectService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SubjectService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subject/subject.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(subjectModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/subject/subject.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        subjectModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createSubjectDto: CreateSubjectDto)\n                \n            \n\n\n            \n                \n                    Defined in src/subject/subject.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createSubjectDto\n                                    \n                                                CreateSubjectDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/subject/subject.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { Model } from 'mongoose';\nimport { SUBJECT_MODEL } from '../constants';\nimport { CreateSubjectDto } from './createSubject.dto';\nimport { Subject } from './subject.interface';\n\n@Injectable()\nexport class SubjectService {\n  constructor(\n    @Inject(SUBJECT_MODEL)\n    private readonly subjectModel: Model,\n  ) {}\n\n  async findAll(): Promise {\n    return await this.subjectModel.find().exec();\n  }\n\n  async create(createSubjectDto: CreateSubjectDto): Promise {\n    const createdSubject = new this.subjectModel(createSubjectDto);\n    return await createdSubject.save();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        birthdate\n                                \n                                \n                                        createdAt\n                                \n                                \n                                        email\n                                \n                                \n                                        name\n                                \n                                \n                                        password\n                                \n                                \n                                        status\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        birthdate\n                                    \n                                \n                                \n                                    \n                                        birthdate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                    \n                                \n                                \n                                    \n                                        createdAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Document } from 'mongoose';\n\nexport interface User extends Document {\n  readonly name: string;\n  readonly email: string;\n  readonly password: string;\n  readonly birthdate: string;\n  readonly status: string;\n  readonly createdAt: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            find\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    find(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  HttpException,\n  HttpStatus,\n  Param,\n  Post,\n} from '@nestjs/common';\nimport { hash } from 'bcrypt';\nimport * as dotenv from 'dotenv';\nimport { ACTIVE_STATUS } from '../constants';\nimport { CreateUserDto } from './createUser.dto';\nimport { User } from './user.interface';\nimport { userValidationSchema } from './user.schema';\nimport { UserService } from './user.service';\n\ndotenv.config();\n\n@Controller('user')\nexport class UserController {\n  constructor(private readonly userService: UserService) {}\n\n  @Get()\n  async findAll(): Promise {\n    return this.userService.findAll();\n  }\n\n  @Get(':id')\n  async find(@Param('id') id: string): Promise {\n    return this.userService.find(id);\n  }\n\n  @Post()\n  async create(@Body() createUserDto: CreateUserDto): Promise {\n    try {\n      await userValidationSchema.validateAsync(createUserDto);\n\n      const { password } = createUserDto;\n      const passHash = await hash(password, 10);\n\n      const createdAt = new Date().valueOf().toString();\n      return this.userService.create({\n        ...createUserDto,\n        password: passHash,\n        createdAt,\n        status: ACTIVE_STATUS,\n      });\n    } catch (error) {\n      const message = error.response.data || error.message;\n      const statusCode =\n        error.response.status || HttpStatus.INTERNAL_SERVER_ERROR;\n      throw new HttpException(message, statusCode);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_imports\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nDatabaseModule->UserModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { DatabaseModule } from '../database/database.module';\nimport { UserController } from './user.controller';\nimport { userProvider } from './user.provider';\nimport { UserService } from './user.service';\n\n@Module({\n  imports: [DatabaseModule],\n  controllers: [UserController],\n  providers: [UserService, ...userProvider],\n  exports: [UserService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findByEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createUserDto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            find\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    find(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findByEmail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findByEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { Model } from 'mongoose';\nimport { USER_MODEL } from '../constants';\nimport { CreateUserDto } from './createUser.dto';\nimport { User } from './user.interface';\n\n@Injectable()\nexport class UserService {\n  constructor(\n    @Inject(USER_MODEL)\n    private readonly userModel: Model,\n  ) {}\n\n  async findAll(): Promise {\n    return this.userModel.find().exec();\n  }\n\n  async find(id: string): Promise {\n    return this.userModel.findById(id);\n  }\n\n  async findByEmail(email: string): Promise {\n    return this.userModel.findOne(email);\n  }\n\n  async create(createUserDto: CreateUserDto): Promise {\n    const createdUser = new this.userModel(createUserDto);\n    return createdUser.save();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/constants.ts\n            \n            variable\n            ACTIVE_STATUS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/constants.ts\n            \n            variable\n            SUBJECT_MODEL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/constants.ts\n            \n            variable\n            USER_MODEL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/database.providers.ts\n            \n            variable\n            databaseProviders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/database.providers.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/subject/createSubject.dto.ts\n            \n            interface\n            CreateSubjectDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/subject/subject.controller.ts\n            \n            controller\n            SubjectController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/subject/subject.interface.ts\n            \n            interface\n            Subject\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/subject/subject.provider.ts\n            \n            variable\n            subjectProvider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/subject/subject.provider.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/subject/subject.schema.ts\n            \n            variable\n            SubjectSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/subject/subject.service.ts\n            \n            injectable\n            SubjectService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/user/createUser.dto.ts\n            \n            interface\n            CreateUserDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/user/user.interface.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/user/user.provider.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/user.provider.ts\n            \n            variable\n            userProvider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/user.schema.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/user.schema.ts\n            \n            variable\n            userValidationSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/6)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @hapi/joi : ^16.1.8\n        \n            @nestjs/common : ^6.7.2\n        \n            @nestjs/core : ^6.7.2\n        \n            @nestjs/passport : ^6.1.1\n        \n            @nestjs/platform-express : ^6.7.2\n        \n            @nestjs/swagger : ^4.1.2\n        \n            @types/mongoose : ^5.5.36\n        \n            axios : ^0.19.0\n        \n            bcrypt : ^3.0.7\n        \n            dotenv : ^8.2.0\n        \n            jwks-rsa : ^1.6.0\n        \n            lodash : ^4.17.15\n        \n            mongoose : ^5.8.3\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.0\n        \n            rxjs : ^6.5.3\n        \n            swagger-ui-express : ^4.1.2\n        \n            uuid : ^3.3.3\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications, heavily inspired by Angular.\n    \n\n\n\n\n\n\n\n\n\n  \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\n  Nest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SubjectModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_SubjectModule\n\n\n\ncluster_SubjectModule_imports\n\n\n\ncluster_SubjectModule_exports\n\n\n\ncluster_SubjectModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nSubjectModule\n\nSubjectModule\n\nAppModule -->\n\nSubjectModule->AppModule\n\n\n\n\n\nSubjectService \n\nSubjectService \n\nSubjectService  -->\n\nSubjectModule->SubjectService \n\n\n\n\n\nUserModule\n\nUserModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nSubjectModule -->\n\nDatabaseModule->SubjectModule\n\n\n\nUserModule -->\n\nDatabaseModule->UserModule\n\n\n\n\n\nSubjectService\n\nSubjectService\n\nSubjectModule -->\n\nSubjectService->SubjectModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ACTIVE_STATUS   (src/.../constants.ts)\n                        \n                        \n                            databaseProviders   (src/.../database.providers.ts)\n                        \n                        \n                            SUBJECT_MODEL   (src/.../constants.ts)\n                        \n                        \n                            subjectProvider   (src/.../subject.provider.ts)\n                        \n                        \n                            SubjectSchema   (src/.../subject.schema.ts)\n                        \n                        \n                            USER_MODEL   (src/.../constants.ts)\n                        \n                        \n                               (src/.../main.ts)\n                        \n                        \n                               (src/.../database.providers.ts)\n                        \n                        \n                               (src/.../subject.provider.ts)\n                        \n                        \n                               (src/.../user.provider.ts)\n                        \n                        \n                            userProvider   (src/.../user.provider.ts)\n                        \n                        \n                            UserSchema   (src/.../user.schema.ts)\n                        \n                        \n                            userValidationSchema   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ACTIVE_STATUS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'ACTIVE'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SUBJECT_MODEL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'SUBJECT_MODEL'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            USER_MODEL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'USER_MODEL'\n                        \n                    \n\n\n            \n        \n\n    src/database/database.providers.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            databaseProviders\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    provide: DATABASE_CONNECTION,\n    useFactory: (): Promise => mongoose.connect(DATABASE_HOST),\n  },\n]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : process.env\n                        \n                    \n\n\n            \n        \n\n    src/subject/subject.provider.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            subjectProvider\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    provide: SUBJECT_MODEL,\n    useFactory: (connection: Connection) =>\n      connection.model('Subject', SubjectSchema),\n    inject: [DATABASE_CONNECTION],\n  },\n]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : process.env\n                        \n                    \n\n\n            \n        \n\n    src/subject/subject.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            SubjectSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new mongoose.Schema({\n  name: { type: String, required: true },\n  description: { type: String, required: false },\n  createdAt: { type: String, required: true },\n})\n                        \n                    \n\n\n            \n        \n\n    src/main.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : process.env\n                        \n                    \n\n\n            \n        \n\n    src/user/user.provider.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : process.env\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userProvider\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    provide: USER_MODEL,\n    useFactory: (connection: Connection) =>\n      connection.model('User', UserSchema),\n    inject: [DATABASE_CONNECTION],\n  },\n]\n                        \n                    \n\n\n            \n        \n\n    src/user/user.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            UserSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new mongoose.Schema({\n  name: { type: String, required: true },\n  email: { type: String, index: true, unique: true, required: true },\n  password: { type: String, required: true },\n  birthdate: { type: String, required: true },\n  status: { type: String, required: true },\n  createdAt: { type: String, required: true },\n})\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userValidationSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Joi.object({\n  name: Joi.string()\n    .min(3)\n    .required(),\n  password: Joi.string(),\n  birthdate: Joi.string().required(),\n  email: Joi.string().email({ minDomainSegments: 2 }),\n})\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
